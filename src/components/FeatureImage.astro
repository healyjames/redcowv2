---
import { Picture } from "astro:assets";
import type { ImageMetadata } from "astro";

interface Props {
  image: ImageMetadata;
  title: string;
  text?: string;
  alt?: string;
  links?: Array<{ text: string; href: string; }>;
}

const { image, title, text, alt = "", links = [] } = Astro.props;

---
<style>
  .feature-image {
    filter: brightness(0.6);
    width: 100%;
    height: 600px;
    object-fit: cover;
    object-position: center;
  }

  @media screen (min-width: 768px) {
    .feature-image {
      height: auto;
      object-fit: unset;
      object-position: unset;
    }
  }

  .feature-image-content {
    position: absolute;
    top: 12rem;
    width: 100%;
    text-align: center;
    color: var(--background);
    h1 {
      font-family: 'PrimaryFont';
      color: var(--background);
      font-size: 3.5rem;
      font-weight: normal;
    }
  }

  .feature-image-container {
    max-height: 75vh;
    overflow: hidden;
  }

  .feature-image-links {
    margin-top: 1rem;
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    flex-direction: row;
    flex-wrap: nowrap;
  }
</style>
<div>
  <div class="feature-image-container">
    <Picture
      src={image}
      widths={[768, 1080, 1920]}
      formats={['avif', 'webp']}
      alt={alt}
      loading="lazy"
      decoding="async"
      class="feature-image"
    />
  </div>
  <div class="feature-image-content">
    <h1>{title}</h1>
    {text && (
      <p>{text}</p>
    )}
    {links && (
      <div class="feature-image-links">
        {links.map(link => (
          <a href={link.href} class="link">
            {link.text}
          </a>
        ))}
      </div>
    )}
  </div>
</div>
