---
import { Picture } from "astro:assets";

interface Card {
  title: string;
  description: string;
  image: ImageMetadata;
  imageAlt: string;
  primaryButton: {
    text: string;
    href: string;
  };
  secondaryButton?: {
    text: string;
    href: string;
  };
}

interface Props {
  cards: Card[];
}

const { cards } = Astro.props;
---
<style>
  .two-image-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .image-card-content p {
    margin-top: 1rem;
  }

  .image-card-content img {
    margin-top: 1rem;
    width: 100%;
    height: auto;
  }

  @media (min-width: 768px) {
    .two-image-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .image-card-button-container {
    margin-top: 1rem;
    display: flex;
    flex-direction: row;
    gap: 1rem;
    align-items: center;
  }
</style>

<section class="two-image-section">
  <div class="section-inner">
    <div class="two-image-grid">
      {cards.map((card) => (
        <div class="image-card">
          <div class="image-card-content">
            <h3>{card.title}</h3>
            <p>{card.description}</p>
            <Picture
              src={card.image}
              widths={[480, 768, 1080, 1920]}
              formats={['avif', 'webp']}
              sizes="100vw"
              alt={card.imageAlt}
              loading="lazy"
              decoding="async"
            />
            <div class="image-card-button-container">
              {card.primaryButton?.text &&  card.primaryButton?.href && (
                <a class="button-primary" href={card.primaryButton.href}>
                  {card.primaryButton.text}
                </a>
              )}
              {card.secondaryButton?.text && card.secondaryButton?.href && (
                <a class="button-secondary" href={card.secondaryButton.href}>
                  {card.secondaryButton.text}
                </a>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>